<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>解决Navicat Premium 12远程连接数据库PostgreSQL 12报错的问题</title>
      <link href="/ac24.html"/>
      <url>/ac24.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@2.0.1/dist/Meting.min.js"></script><h4 id="1、远程目标主机环境"><a href="#1、远程目标主机环境" class="headerlink" title="1、远程目标主机环境"></a>1、远程目标主机环境</h4><p> Debian 10</p><h4 id="2、报错内容"><a href="#2、报错内容" class="headerlink" title="2、报错内容"></a>2、报错内容</h4><p> 发生致命错误：没有用于主机“…”，用户“…”，数据库“…”，SSL关闭的pg_hba.conf记录。</p><h4 id="3、解决过程"><a href="#3、解决过程" class="headerlink" title="3、解决过程"></a>3、解决过程</h4><h5 id="3-1-找到postgresql-conf-和pg-hba-conf这两个文件"><a href="#3-1-找到postgresql-conf-和pg-hba-conf这两个文件" class="headerlink" title="3.1 找到postgresql.conf 和pg_hba.conf这两个文件"></a>3.1 找到postgresql.conf 和pg_hba.conf这两个文件</h5><pre class=" language-bash"><code class="language-bash"><span class="token function">find</span> / -name  postgresql.conf<span class="token function">find</span> / -name pg_hba.conf</code></pre><h5 id="3-2-设置postgresql外网访问"><a href="#3-2-设置postgresql外网访问" class="headerlink" title="3.2 设置postgresql外网访问"></a>3.2 设置postgresql外网访问</h5><h6 id="1）检查配置文件-postgresql-conf"><a href="#1）检查配置文件-postgresql-conf" class="headerlink" title="1）检查配置文件 postgresql.conf"></a>1）检查配置文件 postgresql.conf</h6><p><code>listen_addresses = '*'</code></p><h6 id="2）修改pg-hba-conf-在文件末尾新加一行"><a href="#2）修改pg-hba-conf-在文件末尾新加一行" class="headerlink" title="2）修改pg_hba.conf 在文件末尾新加一行"></a>2）修改pg_hba.conf 在文件末尾新加一行</h6><pre class=" language-config"><code class="language-config"># TYPE DATABASE USER CIDR-ADDRESS METHODhost  all  all  0.0.0.0/0  md5</code></pre><h5 id="3-3-重启postgresql，远程连接成功"><a href="#3-3-重启postgresql，远程连接成功" class="headerlink" title="3.3 重启postgresql，远程连接成功"></a>3.3 重启postgresql，远程连接成功</h5><p><code>systemctl restart postgresql</code></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Navicat Premium 12 </tag>
            
            <tag> PostgreSQL 12 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python3 利用reduce()方法对多层嵌套列表字典数据去重合并（进阶）</title>
      <link href="/9deb.html"/>
      <url>/9deb.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@2.0.1/dist/Meting.min.js"></script><h4 id="1、需求场景"><a href="#1、需求场景" class="headerlink" title="1、需求场景"></a>1、需求场景</h4><p> 基于角色的权限设计，在登录接口中对当前用户角色权限的权限字典进行构造，由于当前用户可能拥有多个角色（普通用户、管理员1、管理员2、超级管理员…），导致权限数据字典可能会出现这种情况：权限字典列表中，不同角色模块字典下具有相同、不同或部分的接口代号、地址。</p><p> 以下方法可以对当前场景下多层嵌套的列表字典数据进行去重并合并同模块的接口数据，可以根据业务需求修改下面的代码。</p><h4 id="2、功能测试代码"><a href="#2、功能测试代码" class="headerlink" title="2、功能测试代码"></a>2、功能测试代码</h4><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># coding=utf-8</span><span class="token keyword">from</span> functools <span class="token keyword">import</span> reduce<span class="token comment" spellcheck="true"># 测试数据，权限字典列表；第一层字典的键不同的数字表示不同的模块</span>aa <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token punctuation">{</span>        <span class="token string">'2'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>            <span class="token string">'codes'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'list'</span><span class="token punctuation">,</span> <span class="token string">'tree'</span><span class="token punctuation">,</span> <span class="token string">'add'</span><span class="token punctuation">,</span> <span class="token string">'delete'</span><span class="token punctuation">,</span> <span class="token string">'update'</span><span class="token punctuation">,</span> <span class="token string">'detail'</span><span class="token punctuation">,</span> <span class="token string">'import'</span><span class="token punctuation">,</span> <span class="token string">'generate'</span><span class="token punctuation">,</span> <span class="token string">'export'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token string">'urls'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'/users/rm/searchlt'</span><span class="token punctuation">,</span> <span class="token string">'/users/rm/ltree'</span><span class="token punctuation">,</span> <span class="token string">'/users/addRisk'</span><span class="token punctuation">,</span> <span class="token string">'/users/rm/delete'</span><span class="token punctuation">,</span> <span class="token string">'/users/risk/update'</span><span class="token punctuation">,</span> <span class="token string">'/users/rm/detail'</span><span class="token punctuation">,</span> <span class="token string">'/users/rm/risk/import'</span><span class="token punctuation">,</span> <span class="token string">'/users/rm/risk/export'</span><span class="token punctuation">,</span> <span class="token string">'/users/rm/risk/download'</span><span class="token punctuation">]</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token string">'4'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>            <span class="token string">'codes'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'list'</span><span class="token punctuation">,</span> <span class="token string">'tree'</span><span class="token punctuation">,</span> <span class="token string">'add'</span><span class="token punctuation">,</span> <span class="token string">'delete'</span><span class="token punctuation">,</span> <span class="token string">'update'</span><span class="token punctuation">,</span> <span class="token string">'detail'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token string">'urls'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'/users/sm/searchlt'</span><span class="token punctuation">,</span> <span class="token string">'/users/sm/ltree'</span><span class="token punctuation">,</span> <span class="token string">'/users/addStrategy'</span><span class="token punctuation">,</span> <span class="token string">'/users/sm/delete'</span><span class="token punctuation">,</span> <span class="token string">'/users/strategy/update'</span><span class="token punctuation">,</span> <span class="token string">'/users/sm/detail'</span><span class="token punctuation">]</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>        <span class="token string">'1'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>            <span class="token string">'codes'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'list'</span><span class="token punctuation">,</span> <span class="token string">'tree'</span><span class="token punctuation">,</span> <span class="token string">'add1'</span><span class="token punctuation">,</span> <span class="token string">'add2'</span><span class="token punctuation">,</span> <span class="token string">'delete'</span><span class="token punctuation">,</span> <span class="token string">'update'</span><span class="token punctuation">,</span> <span class="token string">'detail'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token string">'urls'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'/users/bm/searchlt'</span><span class="token punctuation">,</span> <span class="token string">'/users/bm/ltree'</span><span class="token punctuation">,</span> <span class="token string">'/users/addbaseAsset'</span><span class="token punctuation">,</span> <span class="token string">'/users/addptAsset'</span><span class="token punctuation">,</span> <span class="token string">'/users/bm/delete'</span><span class="token punctuation">,</span> <span class="token string">'/users/asset/update'</span><span class="token punctuation">,</span> <span class="token string">'/users/bm/detail'</span><span class="token punctuation">]</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token string">'4'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>            <span class="token string">'codes'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'list'</span><span class="token punctuation">,</span> <span class="token string">'tree'</span><span class="token punctuation">,</span> <span class="token string">'add'</span><span class="token punctuation">,</span> <span class="token string">'delete'</span><span class="token punctuation">,</span> <span class="token string">'update'</span><span class="token punctuation">,</span> <span class="token string">'detail'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token string">'urls'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'/users/sm/searchlt'</span><span class="token punctuation">,</span> <span class="token string">'/users/sm/ltree'</span><span class="token punctuation">,</span> <span class="token string">'/users/addStrategy'</span><span class="token punctuation">,</span> <span class="token string">'/users/sm/delete'</span><span class="token punctuation">,</span> <span class="token string">'/users/strategy/update'</span><span class="token punctuation">,</span> <span class="token string">'/users/sm/detail'</span><span class="token punctuation">]</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>        <span class="token string">'3'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>            <span class="token string">'codes'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'selDetail'</span><span class="token punctuation">,</span> <span class="token string">'tree'</span><span class="token punctuation">,</span> <span class="token string">'add'</span><span class="token punctuation">,</span> <span class="token string">'update'</span><span class="token punctuation">,</span> <span class="token string">'delete'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token string">'urls'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'/users/szm/searchlt'</span><span class="token punctuation">,</span> <span class="token string">'/users/szm/ltree'</span><span class="token punctuation">,</span> <span class="token string">'/users/sz'</span><span class="token punctuation">,</span> <span class="token string">'/users/sz/update'</span><span class="token punctuation">,</span> <span class="token string">'/users/szm/delete'</span><span class="token punctuation">]</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token keyword">def</span> <span class="token function">sum_dict</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">:</span>    temp <span class="token operator">=</span> dict<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 获取a, b字典中的键值列表，不改变原来的元素顺序去重</span>    union_keys <span class="token operator">=</span> list<span class="token punctuation">(</span>a<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> list<span class="token punctuation">(</span>b<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    new_keys <span class="token operator">=</span> list<span class="token punctuation">(</span>set<span class="token punctuation">(</span>union_keys<span class="token punctuation">)</span><span class="token punctuation">)</span>    new_keys<span class="token punctuation">.</span>sort<span class="token punctuation">(</span>key<span class="token operator">=</span>union_keys<span class="token punctuation">.</span>index<span class="token punctuation">)</span>    <span class="token keyword">for</span> key <span class="token keyword">in</span> new_keys<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># '2'</span>        <span class="token comment" spellcheck="true"># 可以根据业务需求修改下面的代码</span>        m <span class="token operator">=</span> <span class="token number">0</span>        <span class="token keyword">for</span> d <span class="token keyword">in</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">:</span>            d <span class="token operator">=</span> d<span class="token punctuation">.</span>get<span class="token punctuation">(</span>key<span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span>            <span class="token keyword">if</span> d<span class="token punctuation">:</span>                m <span class="token operator">=</span> m <span class="token operator">+</span> <span class="token number">1</span>                <span class="token comment" spellcheck="true"># 对于a, b字典中重复出现的键里可能存在对应值不相同的情况，取并集并做格式转换</span>                <span class="token keyword">if</span> m <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">:</span>                    union_codes_list <span class="token operator">=</span> a<span class="token punctuation">.</span>get<span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">.</span>get<span class="token punctuation">(</span>                        <span class="token string">'codes'</span><span class="token punctuation">)</span> <span class="token operator">+</span> b<span class="token punctuation">.</span>get<span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'codes'</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># list</span>                    union_urls_list <span class="token operator">=</span> a<span class="token punctuation">.</span>get<span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">.</span>get<span class="token punctuation">(</span>                        <span class="token string">'urls'</span><span class="token punctuation">)</span> <span class="token operator">+</span> b<span class="token punctuation">.</span>get<span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'urls'</span><span class="token punctuation">)</span>                    new_codes <span class="token operator">=</span> list<span class="token punctuation">(</span>set<span class="token punctuation">(</span>union_codes_list<span class="token punctuation">)</span><span class="token punctuation">)</span>                    new_urls <span class="token operator">=</span> list<span class="token punctuation">(</span>set<span class="token punctuation">(</span>union_urls_list<span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token comment" spellcheck="true"># set后不改变原来元素顺序</span>                    new_codes<span class="token punctuation">.</span>sort<span class="token punctuation">(</span>key<span class="token operator">=</span>union_codes_list<span class="token punctuation">.</span>index<span class="token punctuation">)</span>                    new_urls<span class="token punctuation">.</span>sort<span class="token punctuation">(</span>key<span class="token operator">=</span>union_urls_list<span class="token punctuation">.</span>index<span class="token punctuation">)</span>                    temp<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"codes"</span><span class="token punctuation">:</span> new_codes<span class="token punctuation">,</span> <span class="token string">"urls"</span><span class="token punctuation">:</span> new_urls<span class="token punctuation">}</span>                <span class="token keyword">else</span><span class="token punctuation">:</span>                    temp<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> d    <span class="token keyword">return</span> tempperm_dict <span class="token operator">=</span> reduce<span class="token punctuation">(</span>sum_dict<span class="token punctuation">,</span> aa<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>perm_dict<span class="token punctuation">)</span></code></pre><h4 id="3、运行结果"><a href="#3、运行结果" class="headerlink" title="3、运行结果"></a>3、运行结果</h4><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>  <span class="token property">"2"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"codes"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"list"</span><span class="token punctuation">,</span> <span class="token string">"tree"</span><span class="token punctuation">,</span> <span class="token string">"add"</span><span class="token punctuation">,</span> <span class="token string">"delete"</span><span class="token punctuation">,</span> <span class="token string">"update"</span><span class="token punctuation">,</span> <span class="token string">"detail"</span><span class="token punctuation">,</span> <span class="token string">"import"</span><span class="token punctuation">,</span> <span class="token string">"generate"</span><span class="token punctuation">,</span> <span class="token string">"export"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token property">"urls"</span><span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token string">"/users/rm/searchlt"</span><span class="token punctuation">,</span>      <span class="token string">"/users/rm/ltree"</span><span class="token punctuation">,</span>      <span class="token string">"/users/addRisk"</span><span class="token punctuation">,</span>      <span class="token string">"/users/rm/delete"</span><span class="token punctuation">,</span>      <span class="token string">"/users/risk/update"</span><span class="token punctuation">,</span>      <span class="token string">"/users/rm/detail"</span><span class="token punctuation">,</span>      <span class="token string">"/users/rm/risk/import"</span><span class="token punctuation">,</span>      <span class="token string">"/users/rm/risk/export"</span><span class="token punctuation">,</span>      <span class="token string">"/users/rm/risk/download"</span>    <span class="token punctuation">]</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token property">"4"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"codes"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"list"</span><span class="token punctuation">,</span> <span class="token string">"tree"</span><span class="token punctuation">,</span> <span class="token string">"add"</span><span class="token punctuation">,</span> <span class="token string">"delete"</span><span class="token punctuation">,</span> <span class="token string">"update"</span><span class="token punctuation">,</span> <span class="token string">"detail"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token property">"urls"</span><span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token string">"/users/sm/searchlt"</span><span class="token punctuation">,</span>      <span class="token string">"/users/sm/ltree"</span><span class="token punctuation">,</span>      <span class="token string">"/users/addStrategy"</span><span class="token punctuation">,</span>      <span class="token string">"/users/sm/delete"</span><span class="token punctuation">,</span>      <span class="token string">"/users/strategy/update"</span><span class="token punctuation">,</span>      <span class="token string">"/users/sm/detail"</span>    <span class="token punctuation">]</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token property">"1"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"codes"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"list"</span><span class="token punctuation">,</span> <span class="token string">"tree"</span><span class="token punctuation">,</span> <span class="token string">"add1"</span><span class="token punctuation">,</span> <span class="token string">"add2"</span><span class="token punctuation">,</span> <span class="token string">"delete"</span><span class="token punctuation">,</span> <span class="token string">"update"</span><span class="token punctuation">,</span> <span class="token string">"detail"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token property">"urls"</span><span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token string">"/users/bm/searchlt"</span><span class="token punctuation">,</span>      <span class="token string">"/users/bm/ltree"</span><span class="token punctuation">,</span>      <span class="token string">"/users/addbaseAsset"</span><span class="token punctuation">,</span>      <span class="token string">"/users/addptAsset"</span><span class="token punctuation">,</span>      <span class="token string">"/users/bm/delete"</span><span class="token punctuation">,</span>      <span class="token string">"/users/asset/update"</span><span class="token punctuation">,</span>      <span class="token string">"/users/bm/detail"</span>    <span class="token punctuation">]</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token property">"3"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"codes"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"selDetail"</span><span class="token punctuation">,</span> <span class="token string">"tree"</span><span class="token punctuation">,</span> <span class="token string">"add"</span><span class="token punctuation">,</span> <span class="token string">"update"</span><span class="token punctuation">,</span> <span class="token string">"delete"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token property">"urls"</span><span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token string">"/users/szm/searchlt"</span><span class="token punctuation">,</span>      <span class="token string">"/users/szm/ltree"</span><span class="token punctuation">,</span>      <span class="token string">"/users/sz"</span><span class="token punctuation">,</span>      <span class="token string">"/users/sz/update"</span><span class="token punctuation">,</span>      <span class="token string">"/users/szm/delete"</span>    <span class="token punctuation">]</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> reduce函数 </tag>
            
            <tag> 去重 </tag>
            
            <tag> 嵌套字典列表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>对比Python的filetype和magic库检测文件类型</title>
      <link href="/8a96.html"/>
      <url>/8a96.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@2.0.1/dist/Meting.min.js"></script><h4 id="1-需求场景和测试结论"><a href="#1-需求场景和测试结论" class="headerlink" title="1. 需求场景和测试结论"></a>1. 需求场景和测试结论</h4><p><strong>测试环境：</strong>python 3.7.x | windows 10 | debian 10</p><p> 最近写了一个Webshell在线检测接口，其中需要对用户上传文件类型做检测。最简单的方式是可以直接获取文件后缀名，但这种方法不准确，用户可以更改后缀名上传文件。网上找了一些资料，发现Python的filetype和magic库都可以进行文件类型的检测。以下是一些可用在其他场景的通用方法可以作为参考。</p><p> 在使用了这两种库进行测试之后，得出以下结论：</p><blockquote><p>a. 可以检测出视频、音频、图片、压缩文件、PDF文件等被修改后缀的原格式。</p><p>b. magic库更可靠更详细，filetype会出现误检测和无结果。</p></blockquote><h4 id="2-获取文件后缀名的方法"><a href="#2-获取文件后缀名的方法" class="headerlink" title="2. 获取文件后缀名的方法"></a>2. 获取文件后缀名的方法</h4><h5 id="2-1-使用正则表达式"><a href="#2-1-使用正则表达式" class="headerlink" title="2.1 使用正则表达式"></a>2.1 使用正则表达式</h5><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> refile_name <span class="token operator">=</span> <span class="token string">"C:\\Users\Dell\\Desktop\\11111111111\\test.php.txt.asp"</span>fstr <span class="token operator">=</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span>r<span class="token string">'.*\.(.*)$'</span><span class="token punctuation">,</span> file_name<span class="token punctuation">,</span> re<span class="token punctuation">.</span>I<span class="token punctuation">)</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>fstr<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># "asp"</span></code></pre><h5 id="2-2-使用os-path-basename-方法"><a href="#2-2-使用os-path-basename-方法" class="headerlink" title="2.2 使用os.path.basename()方法"></a>2.2 使用os.path.basename()方法</h5><p> Unix命令行中的<code>file &lt;文件路径&gt;</code>命令，就是通过该方式实现功能的。</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> osfile_name <span class="token operator">=</span> <span class="token string">"/home/test/test.json.mp3.jsp"</span>fstr <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>basename<span class="token punctuation">(</span>file_name<span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>fstr<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># "jsp"</span></code></pre><h4 id="3-Python的filetype和magic库安装"><a href="#3-Python的filetype和magic库安装" class="headerlink" title="3. Python的filetype和magic库安装"></a>3. Python的filetype和magic库安装</h4><h5 id="3-1-filetype"><a href="#3-1-filetype" class="headerlink" title="3.1 filetype"></a>3.1 <a href="https://github.com/h2non/filetype.py" target="_blank" rel="noopener">filetype</a></h5><pre><code>pip install filetype</code></pre><h5 id="3-2-magic"><a href="#3-2-magic" class="headerlink" title="3.2 magic"></a>3.2 <a href="https://github.com/ahupp/python-magic" target="_blank" rel="noopener">magic</a></h5><pre><code># Linux下安装:pip install python-magic# OSX下安装(需要先安装libmagic依赖项):brew install libmagicpip install python-magic# Windows下安装:pip install python-magic-bin 0.4.14</code></pre><h4 id="4-检测脚本"><a href="#4-检测脚本" class="headerlink" title="4. 检测脚本"></a>4. 检测脚本</h4><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># coding = utf-8</span><span class="token comment" spellcheck="true"># 适用于windows和linux系统环境</span><span class="token comment" spellcheck="true"># 检测结果：magic库更可靠更详细，filetype会出现误检测和无结果。</span><span class="token comment" spellcheck="true"># 可以检测出视频、音频、图片、压缩文件、PDF文件等被修改后缀的原格式。</span><span class="token comment" spellcheck="true"># 注意：Windows下检测路径末尾可以不加'\'，但是Linux下需要在末尾加'/'否则会报错</span><span class="token keyword">import</span> os<span class="token keyword">import</span> filetype<span class="token keyword">import</span> magic<span class="token keyword">def</span> <span class="token function">fdirTraverser</span><span class="token punctuation">(</span>file_dir<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""    简单的文件目录遍历器    file_dir：待检测目录地址    """</span>    <span class="token keyword">for</span> root<span class="token punctuation">,</span> dirs<span class="token punctuation">,</span> files <span class="token keyword">in</span> os<span class="token punctuation">.</span>walk<span class="token punctuation">(</span>file_dir<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"当前目录路径：%s\n"</span> <span class="token operator">%</span> root<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"当前路径下所有子目录：%s\n"</span> <span class="token operator">%</span> dirs<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"当前路径下所有非目录子文件：%s\n"</span> <span class="token operator">%</span> files<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">getSpecFile</span><span class="token punctuation">(</span>file_dir<span class="token punctuation">,</span> file_extension<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""    获取当前路径下除子目录外所有指定后缀的文件名列表（绝对路径）    file_dir：待检测目录地址    file_extension：指定文件后缀名    """</span>    aa <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> root<span class="token punctuation">,</span> dirs<span class="token punctuation">,</span> files <span class="token keyword">in</span> os<span class="token punctuation">.</span>walk<span class="token punctuation">(</span>file_dir<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> file <span class="token keyword">in</span> files<span class="token punctuation">:</span>            <span class="token comment" spellcheck="true"># os.path.splitext()函数将路径拆分为文件名+扩展名</span>            <span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>splitext<span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> file_extension<span class="token punctuation">:</span>                aa<span class="token punctuation">.</span>append<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>root<span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> aa<span class="token keyword">def</span> <span class="token function">getAllFile</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> list_name<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""    递归获取当前路径下所有文件名（绝对路径，包括所有子目录下的文件）    path: 待检测目录地址    list_name: 存储主目录下所有文件名称的列表（绝对路径）    """</span>    b <span class="token operator">=</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>path<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># print(b)</span>    <span class="token keyword">for</span> file <span class="token keyword">in</span> b<span class="token punctuation">:</span>        file_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>path<span class="token punctuation">,</span> file<span class="token punctuation">)</span>        <span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>isdir<span class="token punctuation">(</span>file_path<span class="token punctuation">)</span><span class="token punctuation">:</span>            getAllFile<span class="token punctuation">(</span>file_path<span class="token punctuation">,</span> list_name<span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            list_name<span class="token punctuation">.</span>append<span class="token punctuation">(</span>file_path<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">ck_ftype</span><span class="token punctuation">(</span>path_list<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""使用python的ftype和magic库对比判断文件类型"""</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> path_list<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"++++*******************START********************++++"</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"待检测的文件为：%s\n"</span> <span class="token operator">%</span> i<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 使用filetype库</span>        kind <span class="token operator">=</span> filetype<span class="token punctuation">.</span>guess<span class="token punctuation">(</span>i<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"[+]--------filetype--------[+]"</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"filetype库检测的文件类型："</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> kind <span class="token keyword">is</span> None<span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'[-] 使用filetype库未检测出文件类型！\n'</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'文件扩展名: %s，文件MIME类型：%s'</span> <span class="token operator">%</span> <span class="token punctuation">(</span>kind<span class="token punctuation">.</span>extension<span class="token punctuation">,</span> kind<span class="token punctuation">.</span>mime<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"[+]------------------------[+]\n"</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 使用magic库</span>        <span class="token comment" spellcheck="true"># bb = magic.from_file(i)</span>        <span class="token comment" spellcheck="true"># cc = magic.from_file(i, mime=True)</span>        bb <span class="token operator">=</span> magic<span class="token punctuation">.</span>from_buffer<span class="token punctuation">(</span>open<span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token string">"rb"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token number">2048</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        cc <span class="token operator">=</span> magic<span class="token punctuation">.</span>from_buffer<span class="token punctuation">(</span>open<span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token string">"rb"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token number">2048</span><span class="token punctuation">)</span><span class="token punctuation">,</span> mime<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"[+]------------magic------------[+]"</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"magic库检测的文件类型：%s，MIME类型：%s"</span> <span class="token operator">%</span> <span class="token punctuation">(</span>bb<span class="token punctuation">,</span> cc<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"[+]-----------------------------[+]\n"</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"++++******************END*********************++++\n\n"</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># 支持linux和windows</span>    <span class="token comment" spellcheck="true"># path = "/home/mycode/test_files/"</span>    path <span class="token operator">=</span> input<span class="token punctuation">(</span><span class="token string">"请输入要查询的文件路径："</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 简单的文件、目录遍历</span>    fdirTraverser<span class="token punctuation">(</span>path<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 获取当前路径下除子目录外所有指定后缀的文件名列表（绝对路径）</span>    file_extension <span class="token operator">=</span> <span class="token string">".png"</span>    file_list <span class="token operator">=</span> getSpecFile<span class="token punctuation">(</span>path<span class="token punctuation">,</span> file_extension<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"file_list：%s\n"</span> <span class="token operator">%</span> file_list<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 递归获取当前路径下所有文件名（绝对路径，包括所有子目录下的文件）</span>    aa <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    getAllFile<span class="token punctuation">(</span>path<span class="token punctuation">,</span> aa<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"待检测所有文件列表: %s\n"</span> <span class="token operator">%</span> aa<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 使用python的ftype和magic库对比判断文件类型</span>    ck_ftype<span class="token punctuation">(</span>aa<span class="token punctuation">)</span></code></pre><h4 id="5-部分检测结果截图"><a href="#5-部分检测结果截图" class="headerlink" title="5. 部分检测结果截图"></a>5. 部分检测结果截图</h4><p><img src="https://cdn.jsdelivr.net/gh/Nanzet/nanzet-imgs/images/20200917144610.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/Nanzet/nanzet-imgs/images/20200917144707.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/Nanzet/nanzet-imgs/images/20200917145129.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/Nanzet/nanzet-imgs/images/20200917145317.png" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 文件目录遍历 </tag>
            
            <tag> 文件类型检测 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VMware中虚拟机扩容</title>
      <link href="/80d6.html"/>
      <url>/80d6.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@2.0.1/dist/Meting.min.js"></script><h4 id="1-前提"><a href="#1-前提" class="headerlink" title="1. 前提"></a>1. 前提</h4><p> 安装系统时未进行手动分区，系统只有两个分区（根分区和交换分区），该情况下可直接扩展根分区大小。</p><h4 id="2-过程"><a href="#2-过程" class="headerlink" title="2. 过程"></a>2. 过程</h4><h5 id="2-1-虚拟机设置–-gt-扩展虚拟机硬盘大小（关机）"><a href="#2-1-虚拟机设置–-gt-扩展虚拟机硬盘大小（关机）" class="headerlink" title="2.1 虚拟机设置–>扩展虚拟机硬盘大小（关机）"></a>2.1 虚拟机设置–&gt;扩展虚拟机硬盘大小（关机）</h5><p><img src="https://cdn.jsdelivr.net/gh/Nanzet/nanzet-imgs/images/20200915115638.png" alt=""></p><h5 id="2-2-安装开源磁盘分区工具"><a href="#2-2-安装开源磁盘分区工具" class="headerlink" title="2.2 安装开源磁盘分区工具"></a>2.2 安装开源磁盘分区工具</h5><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> gparted</code></pre><h5 id="2-3-打开Gparted，删除-dev-sda2及其子分区，点击顶部绿色对号保存修改"><a href="#2-3-打开Gparted，删除-dev-sda2及其子分区，点击顶部绿色对号保存修改" class="headerlink" title="2.3 打开Gparted，删除/dev/sda2及其子分区，点击顶部绿色对号保存修改"></a>2.3 打开Gparted，删除/dev/sda2及其子分区，点击顶部绿色对号保存修改</h5><p><img src="https://cdn.jsdelivr.net/gh/Nanzet/nanzet-imgs/images/20200915120546.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/Nanzet/nanzet-imgs/images/20200915120554.jpg" alt=""></p><h5 id="2-4-更改-dev-sda1空间大小，保存修改"><a href="#2-4-更改-dev-sda1空间大小，保存修改" class="headerlink" title="2.4 更改/dev/sda1空间大小，保存修改"></a>2.4 更改/dev/sda1空间大小，保存修改</h5><p>/dev/sda1后都是未分配的空间，选中/dev/sda1右键点击选择”更改大小/移动”，注意预留空间给后面要设置的交换分区。</p><p><img src="https://cdn.jsdelivr.net/gh/Nanzet/nanzet-imgs/images/20200915121108.jpg" alt=""></p><h5 id="2-5对未分配的空间创建交换分区，保存修改"><a href="#2-5对未分配的空间创建交换分区，保存修改" class="headerlink" title="2.5对未分配的空间创建交换分区，保存修改"></a>2.5对未分配的空间创建交换分区，保存修改</h5><p><img src="https://cdn.jsdelivr.net/gh/Nanzet/nanzet-imgs/images/20200915121337.jpg" alt=""></p><h5 id="2-6-查看Linux系统分区信息"><a href="#2-6-查看Linux系统分区信息" class="headerlink" title="2.6 查看Linux系统分区信息"></a>2.6 查看Linux系统分区信息</h5><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">fdisk</span> -l</code></pre><p><img src="https://cdn.jsdelivr.net/gh/Nanzet/nanzet-imgs/images/20200915121620.jpg" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VMware </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>V2Ray+WebSocket+TLS+Nginx</title>
      <link href="/4628.html"/>
      <url>/4628.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@2.0.1/dist/Meting.min.js"></script><h4 id="1-v2ray服务端配置参考"><a href="#1-v2ray服务端配置参考" class="headerlink" title="1. v2ray服务端配置参考"></a>1. v2ray服务端配置参考</h4><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>  <span class="token property">"log"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"loglevel"</span><span class="token operator">:</span> <span class="token string">"warning"</span><span class="token punctuation">,</span>    <span class="token property">"access"</span><span class="token operator">:</span> <span class="token string">"/var/log/v2ray/access.log"</span><span class="token punctuation">,</span>    <span class="token property">"error"</span><span class="token operator">:</span> <span class="token string">"/var/log/v2ray/error.log"</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token property">"inbounds"</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token punctuation">{</span>      <span class="token property">"port"</span><span class="token operator">:</span> <span class="token number">15421</span><span class="token punctuation">,</span>    # 改成自己的端口，注意防火墙开启<span class="token number">15421</span>端口      <span class="token property">"listen"</span><span class="token operator">:</span> <span class="token string">"127.0.0.1"</span><span class="token punctuation">,</span>      <span class="token property">"protocol"</span><span class="token operator">:</span> <span class="token string">"vmess"</span><span class="token punctuation">,</span>      <span class="token property">"settings"</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token property">"clients"</span><span class="token operator">:</span> <span class="token punctuation">[</span>          <span class="token punctuation">{</span>            <span class="token property">"id"</span><span class="token operator">:</span> <span class="token string">"xxxxxxxxx"</span><span class="token punctuation">,</span>    # 改成自己的id            <span class="token property">"alterId"</span><span class="token operator">:</span> <span class="token number">64</span>          <span class="token punctuation">}</span>        <span class="token punctuation">]</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token property">"streamSettings"</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token property">"network"</span><span class="token operator">:</span> <span class="token string">"ws"</span><span class="token punctuation">,</span>        <span class="token property">"wsSettings"</span><span class="token operator">:</span> <span class="token punctuation">{</span>          <span class="token property">"path"</span><span class="token operator">:</span> <span class="token string">"/ray"</span>    # /ray 路径需要和v2ray客户端、nignx配置里保持一致，可将ray改成一个uuid        <span class="token punctuation">}</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token property">"outbounds"</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token punctuation">{</span>      <span class="token property">"protocol"</span><span class="token operator">:</span> <span class="token string">"freedom"</span><span class="token punctuation">,</span>      <span class="token property">"settings"</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token property">"tag"</span><span class="token operator">:</span> <span class="token string">"direct"</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>      <span class="token property">"protocol"</span><span class="token operator">:</span> <span class="token string">"freedom"</span><span class="token punctuation">,</span>      <span class="token property">"settings"</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token property">"domainStrategy"</span><span class="token operator">:</span> <span class="token string">"UseIPv4"</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token property">"tag"</span><span class="token operator">:</span> <span class="token string">"ip4-out"</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>      <span class="token property">"protocol"</span><span class="token operator">:</span> <span class="token string">"blackhole"</span><span class="token punctuation">,</span>      <span class="token property">"settings"</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token property">"tag"</span><span class="token operator">:</span> <span class="token string">"blocked"</span>    <span class="token punctuation">}</span>  <span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token property">"routing"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"rules"</span><span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token punctuation">{</span>        <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"field"</span><span class="token punctuation">,</span>        <span class="token property">"domain"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"domain:google.com"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token property">"outboundTag"</span><span class="token operator">:</span> <span class="token string">"ip4-out"</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token punctuation">{</span>        <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"field"</span><span class="token punctuation">,</span>        <span class="token property">"ip"</span><span class="token operator">:</span> <span class="token punctuation">[</span>          <span class="token string">"0.0.0.0/8"</span><span class="token punctuation">,</span>          <span class="token string">"10.0.0.0/8"</span><span class="token punctuation">,</span>          <span class="token string">"100.64.0.0/10"</span><span class="token punctuation">,</span>          <span class="token string">"127.0.0.0/8"</span><span class="token punctuation">,</span>          <span class="token string">"169.254.0.0/16"</span><span class="token punctuation">,</span>          <span class="token string">"172.16.0.0/12"</span><span class="token punctuation">,</span>          <span class="token string">"192.0.0.0/24"</span><span class="token punctuation">,</span>          <span class="token string">"192.0.2.0/24"</span><span class="token punctuation">,</span>          <span class="token string">"192.168.0.0/16"</span><span class="token punctuation">,</span>          <span class="token string">"198.18.0.0/15"</span><span class="token punctuation">,</span>          <span class="token string">"198.51.100.0/24"</span><span class="token punctuation">,</span>          "<span class="token number">203.0</span>.<span class="token number">113.0</span>/<span class="token number">24</span><span class="token property">",          "</span><span class="token operator">:</span><span class="token operator">:</span><span class="token number">1</span>/<span class="token number">128</span><span class="token string">",          "</span>fc00<span class="token operator">:</span><span class="token operator">:</span>/<span class="token number">7</span><span class="token string">",          "</span>fe80<span class="token operator">:</span><span class="token operator">:</span>/<span class="token number">10</span>"        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token property">"outboundTag"</span><span class="token operator">:</span> <span class="token string">"blocked"</span>      <span class="token punctuation">}</span>    <span class="token punctuation">]</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p> 重启v2ray服务端：</p><pre class=" language-bash"><code class="language-bash">systemctl restart v2ray</code></pre><h4 id="2-安装Nginx"><a href="#2-安装Nginx" class="headerlink" title="2. 安装Nginx"></a>2. 安装Nginx</h4><p>参考：<a href="https://www.cnblogs.com/gede/p/11011693.html" target="_blank" rel="noopener">https://www.cnblogs.com/gede/p/11011693.html</a></p><h5 id="2-1-执行安装命令"><a href="#2-1-执行安装命令" class="headerlink" title="2.1. 执行安装命令"></a>2.1. 执行安装命令</h5><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> nginx</code></pre><h5 id="2-2-查看版本检测是否安装成功"><a href="#2-2-查看版本检测是否安装成功" class="headerlink" title="2.2. 查看版本检测是否安装成功"></a>2.2. 查看版本检测是否安装成功</h5><pre class=" language-bash"><code class="language-bash">nginx -v</code></pre><h4 id="3-配置Nginx"><a href="#3-配置Nginx" class="headerlink" title="3. 配置Nginx"></a>3. 配置Nginx</h4><h5 id="3-1-切换到nginx的配置文件夹目录"><a href="#3-1-切换到nginx的配置文件夹目录" class="headerlink" title="3.1.  切换到nginx的配置文件夹目录"></a>3.1.  切换到nginx的配置文件夹目录</h5><pre class=" language-bash"><code class="language-bash"><span class="token function">cd</span> /etc/nginx/conf.d</code></pre><h5 id="3-2-申请免费ssl证书"><a href="#3-2-申请免费ssl证书" class="headerlink" title="3.2 申请免费ssl证书"></a>3.2 申请免费ssl证书</h5><p><strong>方案一：</strong>可以使用在TLS教程里生成的证书（<a href="https://guide.v2fly.org/advanced/tls.html" target="_blank" rel="noopener">传送门</a>）</p><p><strong>方案二：</strong>使用certbot自动签一个let’s encrypt证书</p><p> 例如我的系统是ubuntu 16.04，网站运行在nignx上（其他版本请在页面自己选择），签发证书参考：<a href="https://certbot.eff.org/lets-encrypt/ubuntuxenial-nginx" target="_blank" rel="noopener">https://certbot.eff.org/lets-encrypt/ubuntuxenial-nginx</a></p><p> 注意：第4步选择just get a certificate即可。</p><p> 英文教程看起来费劲的话，参考：Ubuntu免费ssl证书（Let’s Encrypt）配置（里面的配置文件内容不用参考）</p><p> 证书生成成功的提示信息，可以查看保存的位置：</p><pre class=" language-bash"><code class="language-bash">IMPORTANT NOTES:- Congratulations<span class="token operator">!</span> Your certificate and chain have been saved at:   /etc/letsencrypt/live/yourdomain.com/fullchain.pem   Your key <span class="token function">file</span> has been saved at:   /etc/letsencrypt/live/yourdomain.com/privkey.pem   Your cert will expire on 2020-11-10. To obtain a new or tweaked   version of this certificate <span class="token keyword">in</span> the future, simply run certbot   again. To non-interactively renew *all* of your certificates, run   <span class="token string">"certbot renew"</span>- Your account credentials have been saved <span class="token keyword">in</span> your Certbot   configuration directory at /etc/letsencrypt. You should <span class="token function">make</span> a   secure backup of this folder now. This configuration directory will   also contain certificates and private keys obtained by Certbot so   making regular backups of this folder is ideal.- If you like Certbot, please consider supporting our work by:   Donating to ISRG / Let's Encrypt:   https://letsencrypt.org/donate   Donating to EFF:                    https://eff.org/donate-le</code></pre><h5 id="3-3-添加对应网站的配置文件"><a href="#3-3-添加对应网站的配置文件" class="headerlink" title="3.3 添加对应网站的配置文件"></a>3.3 添加对应网站的配置文件</h5><p> 常用的命名规则：项目名+二级域名+端口.conf，例如：</p><pre class=" language-bash"><code class="language-bash">vim v2ray-yourdomain-15421.conf</code></pre><p> 配置内容：</p><pre class=" language-bash"><code class="language-bash">server <span class="token punctuation">{</span>  listen  443 ssl<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true"># 注意防火墙开启443端口</span>  ssl on<span class="token punctuation">;</span>  ssl_certificate       /etc/letsencrypt/live/yourdomain.com/fullchain.pem<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true"># 你的ssl证书</span>  ssl_certificate_key   /etc/letsencrypt/live/yourdomain.com/privkey.pem<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true"># 你的ssl key</span>  ssl_protocols         TLSv1 TLSv1.1 TLSv1.2<span class="token punctuation">;</span>  ssl_ciphers           HIGH:<span class="token operator">!</span>aNULL:<span class="token operator">!</span>MD5<span class="token punctuation">;</span>  server_name           yourdomain.com<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true"># 你的网站域名</span>        location /ray <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true"># /ray 路径需要和v2ray服务器端，客户端保持一致</span>        proxy_redirect off<span class="token punctuation">;</span>        proxy_pass http://127.0.0.1:15421<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true"># 此IP地址和端口需要和v2ray服务器保持一致</span>        proxy_http_version 1.1<span class="token punctuation">;</span>        proxy_set_header Upgrade <span class="token variable">$http_upgrade</span><span class="token punctuation">;</span>        proxy_set_header Connection <span class="token string">"upgrade"</span><span class="token punctuation">;</span>        proxy_set_header Host <span class="token variable">$http_host</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true"># Show realip in v2ray access.log</span>        proxy_set_header X-Real-IP <span class="token variable">$remote_addr</span><span class="token punctuation">;</span>        proxy_set_header X-Forwarded-For <span class="token variable">$proxy_add_x_forwarded_for</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p> 保存配置文件后，检查配置是否有错误：</p><pre class=" language-bash"><code class="language-bash">nginx -t</code></pre><p><img src="https://cdn.jsdelivr.net/gh/Nanzet/nanzet-imgs/images/20200914173414.jpg" alt=""></p><p> 重启nginx使配置文件生效：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">service</span> nginx restart</code></pre><h4 id="4-v2ray客户端配置参考"><a href="#4-v2ray客户端配置参考" class="headerlink" title="4. v2ray客户端配置参考"></a>4. v2ray客户端配置参考</h4><p><strong>方案一：</strong>V2Ray客户端配置文件，以服务形式运行：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"inbounds"</span><span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token punctuation">{</span>        <span class="token property">"port"</span><span class="token operator">:</span> <span class="token number">1080</span><span class="token punctuation">,</span>        <span class="token property">"listen"</span><span class="token operator">:</span> <span class="token string">"127.0.0.1"</span><span class="token punctuation">,</span>        <span class="token property">"protocol"</span><span class="token operator">:</span> <span class="token string">"socks"</span><span class="token punctuation">,</span>        <span class="token property">"sniffing"</span><span class="token operator">:</span> <span class="token punctuation">{</span>          <span class="token property">"enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>          <span class="token property">"destOverride"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"http"</span><span class="token punctuation">,</span> <span class="token string">"tls"</span><span class="token punctuation">]</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token property">"settings"</span><span class="token operator">:</span> <span class="token punctuation">{</span>          <span class="token property">"auth"</span><span class="token operator">:</span> <span class="token string">"noauth"</span><span class="token punctuation">,</span>          <span class="token property">"udp"</span><span class="token operator">:</span> <span class="token boolean">false</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token property">"outbounds"</span><span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token punctuation">{</span>        <span class="token property">"protocol"</span><span class="token operator">:</span> <span class="token string">"vmess"</span><span class="token punctuation">,</span>        <span class="token property">"settings"</span><span class="token operator">:</span> <span class="token punctuation">{</span>          <span class="token property">"vnext"</span><span class="token operator">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">{</span>              <span class="token property">"address"</span><span class="token operator">:</span> <span class="token string">"yourdomain.com"</span><span class="token punctuation">,</span>              <span class="token property">"port"</span><span class="token operator">:</span> <span class="token number">443</span><span class="token punctuation">,</span>              <span class="token property">"users"</span><span class="token operator">:</span> <span class="token punctuation">[</span>                <span class="token punctuation">{</span>                  <span class="token property">"id"</span><span class="token operator">:</span> "xxxxxxxx<span class="token punctuation">,</span>                  <span class="token property">"alterId"</span><span class="token operator">:</span> <span class="token number">64</span>                <span class="token punctuation">}</span>              <span class="token punctuation">]</span>            <span class="token punctuation">}</span>          <span class="token punctuation">]</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token property">"streamSettings"</span><span class="token operator">:</span> <span class="token punctuation">{</span>          <span class="token property">"network"</span><span class="token operator">:</span> <span class="token string">"ws"</span><span class="token punctuation">,</span>          <span class="token property">"security"</span><span class="token operator">:</span> <span class="token string">"tls"</span><span class="token punctuation">,</span>          <span class="token property">"wsSettings"</span><span class="token operator">:</span> <span class="token punctuation">{</span>            <span class="token property">"path"</span><span class="token operator">:</span> <span class="token string">"/ray"</span>    # /ray 路径需要和v2ray服务器端，nginx配置里保持一致          <span class="token punctuation">}</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span>    <span class="token punctuation">]</span>  <span class="token punctuation">}</span></code></pre><p><strong>方案二：</strong>下载Windows客户端–V2rayN（新手下载.zip包）（推荐）</p><p> 打开软件，点击：服务器→添加[VMess]服务器：</p><p><img src="https://cdn.jsdelivr.net/gh/Nanzet/nanzet-imgs/images/20200914172245.jpg" alt=""></p><p> 填上你设置的对应数据，如服务器ip、端口、UUID（服务端和客户端必须一致），加密方式一般为aes-128-gcm,协议为ws,伪装域名留空，路径为/ray，开启tls和不安全传输，设置完保存。</p><p> 右键V2RayN的系统栏小图标，点击启用Http代理，Http代理模式选择第二个PAC模式，最后再打开V2RayN软件面板，在检查更新里选择更新PAC。<br>到此，V2Ray就全部配置完成了。</p><p> 谷歌浏览器测试一下：</p><p><img src="https://cdn.jsdelivr.net/gh/Nanzet/nanzet-imgs/images/20200914173737.jpg" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> v2ray </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django--使用snowflake自定义生成主键ID替换数据库主键自增ID</title>
      <link href="/d893.html"/>
      <url>/d893.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@2.0.1/dist/Meting.min.js"></script><h4 id="1、场景"><a href="#1、场景" class="headerlink" title="1、场景"></a>1、场景</h4><h5 id="1-1-安装环境"><a href="#1-1-安装环境" class="headerlink" title="1.1 安装环境"></a>1.1 安装环境</h5><p>python–v 3.7.1</p><p>Django–v 2.2</p><h5 id="1-2-应用场景"><a href="#1-2-应用场景" class="headerlink" title="1.2 应用场景"></a>1.2 应用场景</h5><p> 原来使用的所有数据库表模型里的主键都是自定义或数据库自动生成的自增ID，它存在以下两大缺点无法满足后续的需求，使用雪花算法自定义生成主键ID可以避免这种问题。</p><p><strong>数据库主键自增id的缺点：</strong></p><p> a. 极度依赖数据库，分表分库或者数据库做主从结构时无法保证唯一性，ID在生成时会出现性能瓶颈。</p><p> b. 不安全，客户端可以根据自增ID很轻易猜出我们的业务数据</p><h4 id="2、了解雪花算法snowflake"><a href="#2、了解雪花算法snowflake" class="headerlink" title="2、了解雪花算法snowflake"></a>2、了解雪花算法snowflake</h4><p><strong>原理：</strong></p><p> 参考：<a href="https://www.cnblogs.com/oklizz/p/11865750.html" target="_blank" rel="noopener">https://www.cnblogs.com/oklizz/p/11865750.html</a></p><p><strong>优点：</strong> </p><p> 不依赖第三方系统，ID全局唯一，数据具有递增的连续性，便于查询。</p><p><strong>缺点：</strong></p><p>  依赖系统时钟，如果系统时钟有问题，会导致ID重复（该问题可以通过很多方式避免）</p><h4 id="3、过程"><a href="#3、过程" class="headerlink" title="3、过程"></a>3、过程</h4><h5 id="3-1-models-py中创建测试原始模型类testRMF，表名’tb-testRMF’"><a href="#3-1-models-py中创建测试原始模型类testRMF，表名’tb-testRMF’" class="headerlink" title="3.1 models.py中创建测试原始模型类testRMF，表名’tb_testRMF’"></a>3.1 models.py中创建测试原始模型类testRMF，表名’tb_testRMF’</h5><p><strong>字段：</strong><br>自增主键：test_uid   BigAutoField、</p><p>名称：test_name   CharField</p><p>年龄：test_age   IntegerField</p><p><u><em>models.py:</em></u></p><pre class=" language-python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">testRMF</span><span class="token punctuation">(</span>models<span class="token punctuation">.</span>Model<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""just for test"""</span>    test_uid <span class="token operator">=</span>  models<span class="token punctuation">.</span>BigAutoField<span class="token punctuation">(</span>primary_key<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> verbose_name<span class="token operator">=</span><span class="token string">"测试数据uid"</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 主键</span>    test_name <span class="token operator">=</span> models<span class="token punctuation">.</span>CharField<span class="token punctuation">(</span>max_length<span class="token operator">=</span><span class="token number">64</span><span class="token punctuation">,</span> verbose_name<span class="token operator">=</span><span class="token string">"名称"</span><span class="token punctuation">)</span>    test_age <span class="token operator">=</span> models<span class="token punctuation">.</span>IntegerField<span class="token punctuation">(</span>null<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> verbose_name<span class="token operator">=</span><span class="token string">"年龄"</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">__str__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> str<span class="token punctuation">(</span>self<span class="token punctuation">.</span>test_name<span class="token punctuation">)</span>    <span class="token keyword">class</span> <span class="token class-name">Meta</span><span class="token punctuation">:</span>        db_table <span class="token operator">=</span> <span class="token string">'tb_testRMF'</span>        verbose_name <span class="token operator">=</span> verbose_name_plural <span class="token operator">=</span> <span class="token string">'测试数据表'</span></code></pre><h5 id="3-2-生成并应用数据库迁移文件，数据表生成"><a href="#3-2-生成并应用数据库迁移文件，数据表生成" class="headerlink" title="3.2 生成并应用数据库迁移文件，数据表生成"></a>3.2 生成并应用数据库迁移文件，数据表生成</h5><pre class=" language-python"><code class="language-python">python3 manage<span class="token punctuation">.</span>py makemigrationspython3 manage<span class="token punctuation">.</span>py migrate</code></pre><p><em><u>tb_testRMF：</u></em></p><p><img src="https://cdn.jsdelivr.net/gh/Nanzet/nanzet-imgs/images/2020071401.jpg" alt=""></p><h5 id="3-3-修改为使用snowflake自定义生成主键ID"><a href="#3-3-修改为使用snowflake自定义生成主键ID" class="headerlink" title="3.3 修改为使用snowflake自定义生成主键ID"></a>3.3 修改为使用snowflake自定义生成主键ID</h5><p>  首先需要将原来的测试原始模型类testRMF注释掉，运行3.2两行代码移除数据表。</p><p> 在应用目录下（即与models.py同级的目录）新建一个脚本文件snow.py保存雪花算法代码，在models.py中将雪花算法调用方法封装为一个返回id的函数供default参数赋值使用，修改后重新应用并生成数据库迁移文件。</p><p><em><u>修改后的models.py:</u></em></p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># coding=utf-8</span><span class="token keyword">import</span> django<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>timezone <span class="token keyword">as</span> timezone<span class="token keyword">from</span> django<span class="token punctuation">.</span>contrib<span class="token punctuation">.</span>auth<span class="token punctuation">.</span>hashers <span class="token keyword">import</span> check_password<span class="token punctuation">,</span> make_password<span class="token keyword">from</span> django<span class="token punctuation">.</span>db <span class="token keyword">import</span> models<span class="token keyword">from</span> <span class="token punctuation">.</span>snow <span class="token keyword">import</span> <span class="token operator">*</span><span class="token comment" spellcheck="true"># Create your models here.</span><span class="token keyword">def</span> <span class="token function">test_genID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    worker <span class="token operator">=</span> IdWorker<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>    my_id <span class="token operator">=</span> worker<span class="token punctuation">.</span>get_id<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> my_id<span class="token keyword">class</span> <span class="token class-name">testRMF</span><span class="token punctuation">(</span>models<span class="token punctuation">.</span>Model<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""just for test"""</span>    test_uid <span class="token operator">=</span> models<span class="token punctuation">.</span>BigIntegerField<span class="token punctuation">(</span>primary_key<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> default<span class="token operator">=</span>test_genID<span class="token punctuation">,</span> verbose_name<span class="token operator">=</span><span class="token string">"测试数据uid"</span><span class="token punctuation">)</span>    test_name <span class="token operator">=</span> models<span class="token punctuation">.</span>CharField<span class="token punctuation">(</span>max_length<span class="token operator">=</span><span class="token number">64</span><span class="token punctuation">,</span> verbose_name<span class="token operator">=</span><span class="token string">"名称"</span><span class="token punctuation">)</span>    test_age <span class="token operator">=</span> models<span class="token punctuation">.</span>IntegerField<span class="token punctuation">(</span>null<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> verbose_name<span class="token operator">=</span><span class="token string">"年龄"</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">__str__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> self<span class="token punctuation">.</span>test_name    <span class="token keyword">class</span> <span class="token class-name">Meta</span><span class="token punctuation">:</span>        db_table <span class="token operator">=</span> <span class="token string">'tb_testRMF'</span>        verbose_name <span class="token operator">=</span> verbose_name_plural <span class="token operator">=</span> <span class="token string">'测试数据表'</span></code></pre><p> 记得执行3.2两行命令。</p><p><em><u>tb_testRMF：</u></em></p><p><img src="https://cdn.jsdelivr.net/gh/Nanzet/nanzet-imgs/images/2020071402.jpg" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Django </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决VS Code安装Python扩展后自动下载microsoft python language server缓慢的问题</title>
      <link href="/c911.html"/>
      <url>/c911.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@2.0.1/dist/Meting.min.js"></script><h4 id="采取手动安装的方法："><a href="#采取手动安装的方法：" class="headerlink" title="采取手动安装的方法："></a>采取手动安装的方法：</h4><p>1、根据失败提示记录下载nupkg文件，例如：<a href="https://pvsc.azureedge.net/python-language-server-stable/Python-Language-Server-win-x64.0.5.51.nupkg" target="_blank" rel="noopener">https://pvsc.azureedge.net/python-language-server-stable/Python-Language-Server-win-x64.0.5.51.nupkg</a></p><p>2、解压缩文件至插件文件夹目录</p><p><strong>windows下：</strong></p><p> 解压缩nupkg文件至到Windows系统下的目录：C:\Users\yourname.vscode\extensions\ms-python.python-2020.3.71113\languageServer.0.5.51（复制前清空ms-python.python-2020.3.71113文件夹内的内容）重新打开vs code即可激活拓展。</p><p><strong>linux下：</strong></p><p> 方法类似：</p><pre class=" language-linux"><code class="language-linux"># 以下命令中的 `ms-python.python-2020.3.71113` 为当前安装的 python 插件文件夹，如果你的 python 版本不一样需自行替换unzip Python-Language-Server-linux-x64.0.5.51.nupkg -d ~/.vscode/extensions/ms-python.python-2020.3.71113/languageServer.0.5.51chmod +x ~/.vscode/extensions/ms-python.python-2020.3.71113/languageServer.0.5.51/Microsoft.Python.LanguageServer</code></pre><p>3、安装完成后打开 vscode 设置文件 ~/.config/Code/User/settings.json（也可使用 ctrl+, 打开 vscode 图形界面配置），添加 “python.autoUpdateLanguageServer”: false 以禁用 python 插件自动去更新 language server。windows下直接点文件–&gt;首选项–&gt;设置，搜索python.autoUpdateLanguageServer取消勾选即可。</p><p>4、如果按照上述设置后发现VS Code还是会自动下载microsoft python language server，那么可能是<a href="https://juejin.im/post/5b9b5a6f6fb9a05d22728e36" target="_blank" rel="noopener">Settings Sync插件</a>的原因了，该插件用于两台PC同步VS Code配置，禁用该插件后解决问题。（注：languageServer文件夹名称最好去掉版本号）</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Visual Studio Code </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 利用匿名函数和reduce()方法对嵌套列表去重</title>
      <link href="/bbad.html"/>
      <url>/bbad.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@2.0.1/dist/Meting.min.js"></script><h4 id="1、示例及结果"><a href="#1、示例及结果" class="headerlink" title="1、示例及结果"></a>1、示例及结果</h4><pre class=" language-python"><code class="language-python"><span class="token keyword">from</span> functools <span class="token keyword">import</span> reduce<span class="token comment" spellcheck="true"># 待去重嵌套列表（元素为字典）</span>aa <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">'bigAsset1'</span><span class="token punctuation">:</span> <span class="token string">'资产1'</span><span class="token punctuation">,</span> <span class="token string">'bigAsset2'</span><span class="token punctuation">:</span> <span class="token string">'资产2'</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">'bigAsset1'</span><span class="token punctuation">:</span> <span class="token string">'资产2'</span><span class="token punctuation">,</span> <span class="token string">'bigAsset2'</span><span class="token punctuation">:</span> <span class="token string">'资产1'</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">'bigAsset1'</span><span class="token punctuation">:</span> <span class="token string">'资产3'</span><span class="token punctuation">,</span> <span class="token string">'bigAsset2'</span><span class="token punctuation">:</span> <span class="token string">'资产1'</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">'bigAsset1'</span><span class="token punctuation">:</span> <span class="token string">'资产1'</span><span class="token punctuation">,</span> <span class="token string">'bigAsset2'</span><span class="token punctuation">:</span> <span class="token string">'资产2'</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">'bigAsset1'</span><span class="token punctuation">:</span> <span class="token string">'资产2'</span><span class="token punctuation">,</span> <span class="token string">'bigAsset2'</span><span class="token punctuation">:</span> <span class="token string">'资产3'</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true"># 待去重嵌套列表（元素为集合）</span>bb <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">'资产1'</span><span class="token punctuation">,</span> <span class="token string">'资产2'</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">'资产2'</span><span class="token punctuation">,</span> <span class="token string">'资产1'</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">'资产3'</span><span class="token punctuation">,</span> <span class="token string">'资产1'</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">'资产1'</span><span class="token punctuation">,</span> <span class="token string">'资产2'</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">'资产2'</span><span class="token punctuation">,</span> <span class="token string">'资产3'</span><span class="token punctuation">}</span><span class="token punctuation">]</span>cc <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">'资产1'</span><span class="token punctuation">,</span> <span class="token string">'资产2'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'资产2'</span><span class="token punctuation">,</span> <span class="token string">'资产1'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'资产3'</span><span class="token punctuation">,</span> <span class="token string">'资产1'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'资产1'</span><span class="token punctuation">,</span> <span class="token string">'资产2'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'资产2'</span><span class="token punctuation">,</span> <span class="token string">'资产3'</span><span class="token punctuation">]</span><span class="token punctuation">]</span>run_function <span class="token operator">=</span> <span class="token keyword">lambda</span> x<span class="token punctuation">,</span>y <span class="token punctuation">:</span> x <span class="token keyword">if</span> y <span class="token keyword">in</span> x <span class="token keyword">else</span> x <span class="token operator">+</span> <span class="token punctuation">[</span>y<span class="token punctuation">]</span>aa <span class="token operator">=</span> reduce<span class="token punctuation">(</span>run_function<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">]</span> <span class="token operator">+</span> aa<span class="token punctuation">)</span>bb <span class="token operator">=</span> reduce<span class="token punctuation">(</span>run_function<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">]</span> <span class="token operator">+</span> bb<span class="token punctuation">)</span>cc <span class="token operator">=</span> reduce<span class="token punctuation">(</span>run_function<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">]</span> <span class="token operator">+</span> cc<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>aa<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># [{'bigAsset1': '资产1', 'bigAsset2': '资产2'}, {'bigAsset1': '资产2', 'bigAsset2': '资产1'}, {'bigAsset1': '资产3', 'bigAsset2': '资产1'}, {'bigAsset1': '资产2', 'bigAsset2': '资产3'}]</span><span class="token keyword">print</span><span class="token punctuation">(</span>bb<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># [{'资产1', '资产2'}, {'资产3', '资产1'}, {'资产3', '资产2'}]</span><span class="token keyword">print</span><span class="token punctuation">(</span>cc<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># [['资产1', '资产2'], ['资产2', '资产1'], ['资产3', '资产1'], ['资产2', '资产3']]</span></code></pre><p> 注意上面不同的两种结果，适用于不同场景。对于上例中若对资产顺序无要求，去重应采用bb的形式。</p><h4 id="2、原理分析"><a href="#2、原理分析" class="headerlink" title="2、原理分析"></a>2、原理分析</h4><p> 打开你的IDE调试思路会很清晰，打开之前你可能需要了解这些知识：</p><ul><li><a href="https://www.cnblogs.com/shenhongbo/p/11566976.html" target="_blank" rel="noopener">python 匿名函数</a></li><li><a href="https://kodango.com/variable-arguments-in-python#comment-231489" target="_blank" rel="noopener">python中的<em>args、*</em>kwargs</a></li><li><a href="https://www.runoob.com/python/python-func-reduce.html" target="_blank" rel="noopener">python reduce()函数</a></li></ul><p> 匿名函数run_function这行的功能实现等同于以下方法：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">run_function</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> y <span class="token keyword">in</span> x<span class="token punctuation">:</span>        <span class="token keyword">return</span> x    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> x <span class="token operator">+</span> <span class="token punctuation">[</span>y<span class="token punctuation">]</span></code></pre><p> 其次，注意两个列表相加的结果，例如：</p><pre class=" language-python"><code class="language-python"><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">]</span> <span class="token operator">+</span> bb<span class="token comment" spellcheck="true"># [[], {'资产1', '资产2'}, {'资产1', '资产2'}, {'资产3', '资产1'}, {'资产1', '资产2'}, {'资产3', '资产2'}]</span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>V2Ray安装教程（初阶）</title>
      <link href="/2b11.html"/>
      <url>/2b11.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@2.0.1/dist/Meting.min.js"></script><blockquote><p><strong>【声明：仅供学习交流、查阅资料使用，后果自负】</strong>:grin::grin:</p></blockquote><h4 id="一、购买VPS"><a href="#一、购买VPS" class="headerlink" title="一、购买VPS"></a>一、购买VPS</h4><p>注：已弃用virmach不稳定，购买了Hostus $16/年的套餐，可以修改系统为ubuntu下面的安装v2ray等步骤一样。</p><h5 id="1-1-购买说明"><a href="#1-1-购买说明" class="headerlink" title="1.1 购买说明"></a>1.1 购买说明</h5><p> 我购买的是：<a href="https://billing.virmach.com/" target="_blank" rel="noopener">virmach</a>–&gt;register–&gt;<a href="https://billing.virmach.com/cart.php?gid=18" target="_blank" rel="noopener">KVM &amp; SSD Windows VPS</a>（季付，可搜索virmach优惠码进行兑换；注意操作系统建议选择ubuntu 16.04.6，初始选择的centos 6.5安装v2ray失败）</p><p><img src="https://cdn.jsdelivr.net/gh/Nanzet/nanzet-imgs/images/2020062401.jpg" alt=""></p><p> 上述vps ping的时候不是特别稳定，不过配置v2ray后，速度还可以，能满足查阅资料的需求（这款流量用不完，可以按照自己需求选购套餐）；其他vps推荐：<a href="http://www.hostusvps.com/" target="_blank" rel="noopener">HostUs</a>购买以下套餐即可：（已购买速度快很多、更稳定）</p><p><img src="https://cdn.jsdelivr.net/gh/Nanzet/nanzet-imgs/images/2020062402.jpg" alt=""></p><h4 id="二、ubuntu-16-04-6-安装服务端v2ray流程"><a href="#二、ubuntu-16-04-6-安装服务端v2ray流程" class="headerlink" title="二、ubuntu 16.04.6 安装服务端v2ray流程"></a>二、ubuntu 16.04.6 安装服务端v2ray流程</h4><blockquote><p>注：<br>   使用xshell可远程连接vps，根据hostus提供的root账户密码、IP进行登录连接；初始登录可使用passwd命令更改root账户密码，以后使用该密码即可；若忘记自己设置的密码，在hostus购买的的vps管理界面更改root密码即可。</p></blockquote><h5 id="2-1-更新apt"><a href="#2-1-更新apt" class="headerlink" title="2.1 更新apt"></a>2.1 更新apt</h5><pre><code>sudo apt update &amp;&amp; sudo apt -y upgrade</code></pre><h5 id="2-2-查看系统时间并修改时区"><a href="#2-2-查看系统时间并修改时区" class="headerlink" title="2.2 查看系统时间并修改时区"></a>2.2 查看系统时间并修改时区</h5><pre><code>date -Rtimedatectl set-timezone Asia/Shanghai    # 若提示'Failed to create bus connection: No such file or directory'，先执行apt-get install dbus</code></pre><p><img src="https://cdn.jsdelivr.net/gh/Nanzet/nanzet-imgs/images/2020062403.jpg" alt=""></p><h5 id="2-3-安装upzip"><a href="#2-3-安装upzip" class="headerlink" title="2.3 安装upzip"></a>2.3 安装upzip</h5><pre><code>sudo apt install unzip</code></pre><h5 id="2-4-下载、安装官方维护脚本"><a href="#2-4-下载、安装官方维护脚本" class="headerlink" title="2.4 下载、安装官方维护脚本"></a>2.4 下载、安装官方维护脚本</h5><pre><code>wget https://install.direct/go.sh &amp;&amp; sudo bash go.sh</code></pre><img src="https://cdn.jsdelivr.net/gh/Nanzet/nanzet-imgs/images/2020063002.jpg"><p> 上图的端口号和uuid是随机生成的，可在/etc/v2ray/config.json配置文件中进行更改。</p><p> 生成正确格式的uuid可以参考： <a href="https://www.uuidgenerator.net/，linux也可以使用命令" target="_blank" rel="noopener">https://www.uuidgenerator.net/，linux也可以使用命令</a> cat /proc/sys/kernel/random/uuid 生成。</p><p><img src="https://cdn.jsdelivr.net/gh/Nanzet/nanzet-imgs/images/2020062801.jpg" alt=""></p><p> 查看 or 编辑/etc/v2ray/config.json：</p><pre><code>cat or vim /etc/v2ray/config.json</code></pre><h6 id=""><a href="#" class="headerlink" title=""></a><img src="https://cdn.jsdelivr.net/gh/Nanzet/nanzet-imgs/images/2020062802.jpg" alt=""></h6><h5 id="2-5-设置开机启动-amp-启动服务"><a href="#2-5-设置开机启动-amp-启动服务" class="headerlink" title="2.5 设置开机启动 &amp; 启动服务"></a>2.5 设置开机启动 &amp; 启动服务</h5><pre><code>sudo systemctl enable v2ray &amp;&amp; sudo systemctl start/restart v2ray</code></pre><p>注：systemctl start/restart/stop/status v2ray</p><h5 id="2-6-设置防火墙：-ubuntu防火墙设置"><a href="#2-6-设置防火墙：-ubuntu防火墙设置" class="headerlink" title="2.6 设置防火墙：(ubuntu防火墙设置)"></a>2.6 设置防火墙：(<a href="https://www.jianshu.com/p/eccb913ac58d" target="_blank" rel="noopener">ubuntu防火墙设置</a>)</h5><pre><code># 开启防火墙sudo ufw enable# 打开指定端口sudo ufw allow 15421/tcp# 注：要通过本机的xshell连接上远程的vps则需要开放vps的22端口sudo ufw allow 22# 若提示command not found，执行apt-get install ufw -y</code></pre><h5 id="2-7-升级更新，重新执行安装，不会修改原配置"><a href="#2-7-升级更新，重新执行安装，不会修改原配置" class="headerlink" title="2.7 升级更新，重新执行安装，不会修改原配置"></a>2.7 升级更新，重新执行安装，不会修改原配置</h5><pre><code>$ sudo bash go.sh</code></pre><h5 id="2-8-解决高延迟问题"><a href="#2-8-解决高延迟问题" class="headerlink" title="2.8 解决高延迟问题"></a>2.8 解决高延迟问题</h5><p>安装BBR：</p><pre><code>wget -N --no-check-certificate "https://raw.githubusercontent.com/chiakge/Linux-NetSpeed/master/tcp.sh" &amp;&amp; chmod +x tcp.sh &amp;&amp; ./tcp.sh</code></pre><p> 先选择安装BBR/BBR魔改版内核内核，安装完成后，在执行./tcp.sh按需要选择加速，我选择的是魔改版加速。</p><p> 其他v2ray配置请参考官方教程有详细说明。</p><h5 id="2-9-TLS配置可能遇到的问题及解决方法总结"><a href="#2-9-TLS配置可能遇到的问题及解决方法总结" class="headerlink" title="2.9 TLS配置可能遇到的问题及解决方法总结"></a>2.9 <a href="https://guide.v2fly.org/advanced/tls.html" target="_blank" rel="noopener">TLS配置</a>可能遇到的问题及解决方法总结</h5><p>（1）添加域名解析A记录参考：</p><p><img src="https://cdn.jsdelivr.net/gh/Nanzet/nanzet-imgs/images/2020070405.jpg" alt=""></p><p>（2）解决使用’~/.acme.sh/acme.sh –issue -d mydomain.me –standalone –keylength ec-256 –force’命令生成证书的80端口被占用问题：</p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 查看80端口占用情况</span>lsof <span class="token operator">-</span>i<span class="token punctuation">:</span><span class="token number">80</span><span class="token comment" spellcheck="true"># 若要关闭使用这个端口的程序，使用kill + 对应的pid</span>kill <span class="token operator">-</span><span class="token number">9</span> PID号</code></pre><blockquote><p>参考：</p><p>a. <a href="https://guide.v2fly.org/" target="_blank" rel="noopener">新 V2Ray 白话文指南</a></p><p>b. <a href="https://yuan.ga/v2ray-complete-tutorial/" target="_blank" rel="noopener">v2ray完全使用教程</a></p><p>c. <a href="https://tophat.top/posts/98b102d8.html" target="_blank" rel="noopener">caddy v2 安装教程</a>（WebSocket + TLS + Web尝试失败，有空再试，目前参照官方教程的tls配置成功，且速度较快）</p></blockquote><h4 id="三、客户端安装"><a href="#三、客户端安装" class="headerlink" title="三、客户端安装"></a>三、客户端安装</h4><blockquote><p>客户端如PC建议在chrome或firefox浏览器下载插件Proxy SwitchyOmega搭配使用。</p></blockquote><p><strong>客户端：</strong></p><p><a href="https://github.com/v2ray/v2ray-core/releases" target="_blank" rel="noopener"><strong>Windows</strong></a></p><p><a href="https://github.com/2dust/v2rayN/releases" target="_blank" rel="noopener"><strong>图形化客户端</strong></a></p><p><a href="https://github.com/v2ray/v2ray-core/releases" target="_blank" rel="noopener"><strong>MacOS</strong></a></p><p><a href="https://github.com/v2ray/v2ray-core/releases" target="_blank" rel="noopener"><strong>Linux</strong></a></p><p><strong>Android:</strong> </p><p>V2RayNG: <a href="https://github.com/2dust/v2rayNG/releases" target="_blank" rel="noopener">Github</a> or <a href="https://play.google.com/store/apps/details?id=com.v2ray.ang" target="_blank" rel="noopener">Play Store</a> </p><p>BifrostV:   or <a href="https://play.google.com/store/apps/details?id=com.github.dawndiy.bifrostv" target="_blank" rel="noopener">Play Store</a></p><p><strong>iOS:（支持以下软件，链接可能过时，请在苹果商店下载）</strong></p><p> <a href="https://itunes.apple.com/tw/app/shadowrocket/id932747118" target="_blank" rel="noopener">ShadowRocket</a></p><p> <a href="http://itunes.apple.com/tw/app/kitsunebi-proxy-utility/id1446584073" target="_blank" rel="noopener">Kitsunebi - Proxy Utility</a></p><p> <a href="http://itunes.apple.com/tw/app/kitsunebi-lite/id1387913765" target="_blank" rel="noopener">Kitsunebi Lite</a></p><p><a href="https://itunes.apple.com/tw/app/pepi/id1283082051" target="_blank" rel="noopener">Pepi</a></p><p><a href="https://itunes.apple.com/tw/app/i2ray/id1445270056" target="_blank" rel="noopener">i2Ray</a></p><p><a href="https://itunes.apple.com/tw/app/quantumult/id1252015438" target="_blank" rel="noopener">Quantumult</a></p><p><strong>附：</strong></p><p><a href="https://docs.qq.com/doc/DYlVOcWJtYlFPSFdN" target="_blank" rel="noopener"><strong>400+苹果软件分享</strong></a></p><p><strong>解决关于chrome浏览器插件离线安装和设置SwitchyOmega的问题：</strong>:smirk::smirk:</p><p>（1）<a href="https://crxdl.com/" target="_blank" rel="noopener">下载Chrome扩展插件Crx离线安装包</a>–搜索”SwitchyOmega”</p><p>（2）<a href="https://www.cccitu.com/3391.html" target="_blank" rel="noopener">谷歌Chrome浏览器安装扩展插件</a></p><p>（3）SwitchyOmega配置<a href="https://www.cccitu.com/2655.html" target="_blank" rel="noopener">Chrome浏览器SOCKS代理服务器设置教程</a></p><p>（4）规则列表：（<a href="https://blog.csdn.net/qq_38879305/article/details/106619860" target="_blank" rel="noopener">规则列表刷新不了</a>、仍然恢复不了：<a href="https://blog.csdn.net/qq_36561697/article/details/88350512?utm_medium=distribute.pc_relevant.none-task-blog-baidujs-1" target="_blank" rel="noopener">戳我</a>）</p><pre><code>https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt</code></pre><p><img src="https://cdn.jsdelivr.net/gh/Nanzet/nanzet-imgs/images/2020062803.jpg" alt=""></p><p>（5）google！<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f606.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f606.png?v8">😆</span><span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f606.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f606.png?v8">😆</span><span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f606.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f606.png?v8">😆</span>en​joy it!</p><p><img src="https://cdn.jsdelivr.net/gh/Nanzet/nanzet-imgs/images/2020062804.jpg" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> v2ray </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>理解美团点评分布式ID生成系统--Leaf</title>
      <link href="/58d9.html"/>
      <url>/58d9.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@2.0.1/dist/Meting.min.js"></script><h4 id="1、开源项目地址：https-github-com-Meituan-Dianping-Leaf"><a href="#1、开源项目地址：https-github-com-Meituan-Dianping-Leaf" class="headerlink" title="1、开源项目地址：https://github.com/Meituan-Dianping/Leaf"></a>1、<strong>开源项目地址：</strong><a href="https://github.com/Meituan-Dianping/Leaf" target="_blank" rel="noopener">https://github.com/Meituan-Dianping/Leaf</a></h4><h4 id="2、原理：https-tech-meituan-com-2017-04-21-mt-leaf-html"><a href="#2、原理：https-tech-meituan-com-2017-04-21-mt-leaf-html" class="headerlink" title="2、原理：https://tech.meituan.com/2017/04/21/mt-leaf.html"></a>2、<strong>原理：</strong><a href="https://tech.meituan.com/2017/04/21/mt-leaf.html" target="_blank" rel="noopener">https://tech.meituan.com/2017/04/21/mt-leaf.html</a></h4><h4 id="3、安装："><a href="#3、安装：" class="headerlink" title="3、安装："></a>3、<strong>安装：</strong></h4><ul><li><p>MySQL 8.0.20（<a href="https://www.runoob.com/w3cnote/windows10-mysql-installer.html" target="_blank" rel="noopener">安装</a>）</p></li><li><p>java环境（<a href="https://www.runoob.com/java/java-environment-setup.html" target="_blank" rel="noopener">安装</a>）</p></li><li><p>maven（是一个项目管理工具，可以对 Java 项目进行构建、依赖管理。<a href="https://www.runoob.com/maven/maven-tutorial.html" target="_blank" rel="noopener">教程</a>）</p></li><li><p>zookeeper（一个分布式的，开放源码的分布式应用程序协调服务，是Hadoop和Hbase的重要组件。它是一个为分布式应用提供一致性服务的软件，提供的功能包括：配置维护、域名服务、分布式同步、组服务等。<a href="https://blog.csdn.net/weixin_39249427/article/details/99637734" target="_blank" rel="noopener">安装</a>）</p></li></ul><h4 id="4、对比开源项目需要做的兼容mysql-8的修改："><a href="#4、对比开源项目需要做的兼容mysql-8的修改：" class="headerlink" title="4、对比开源项目需要做的兼容mysql 8的修改："></a>4、<strong>对比开源项目需要做的兼容mysql 8的修改：</strong></h4><p>参考：</p><blockquote><p>a. <a href="https://blog.csdn.net/qq_39455116/article/details/99458001?utm_medium=distribute.pc_relevant.none-task-blog-baidujs-5" target="_blank" rel="noopener">基于MySQL8.0美团leaf测试分布式ID生成系统</a></p><p>b. <a href="https://www.jianshu.com/p/bd6b00e5f5ac" target="_blank" rel="noopener">Leaf：美团的分布式唯一ID方案深入剖析</a></p></blockquote><p><strong>修改1：</strong> </p><p> 父目录下的pom文件修改MySQL版本号：</p><p> 查看版本:</p><p><img src="https://cdn.jsdelivr.net/gh/Nanzet/nanzet-imgs/images/2020061001.jpg" alt=""></p><p> 修改pom.xml文件：</p><p><code>&lt;mysql-connector-java.version&gt;8.0.20&lt;/mysql-connector-java.version&gt;</code></p><p><strong>修改2：</strong></p><p> 数据库的设置，修改文件leaf.properties：</p><pre><code>leaf.name=com.sankuai.leaf.opensource.test# segment模式开关，这种模式依赖数据库leaf.segment.enable=trueleaf.jdbc.url=jdbc:mysql://localhost:3306/leaf?autoReconnect=true&amp;useSSL=false&amp;serverTimezone=Asia/Shanghaileaf.jdbc.driver-class-name=com.mysql.cj.jdbc.Driverleaf.jdbc.username=rootleaf.jdbc.password=xxxxx# snowflake模式，这种模式依赖zookeeperleaf.snowflake.enable=trueleaf.snowflake.zk.address=127.0.0.1:2181leaf.snowflake.port=9099</code></pre><p><strong>修改3：</strong></p><p> 修改xxx\Leaf\leaf-server\src\main\java\com\sankuai\inf\leaf\server\Constants.java，Constants类添加driver支持：</p><p><code>public static final String driver = "leaf.jdbc.driver-class-name";</code></p><p><img src="https://cdn.jsdelivr.net/gh/Nanzet/nanzet-imgs/images/2020061002.png" alt=""></p><p><strong>修改4：</strong></p><p> 修改xxx\Leaf\leaf-server\src\main\java\com\sankuai\inf\leaf\server\service\SegmentService.java，SegmentService类下面添加driver支持：</p><p><code>dataSource.setDriverClassName(properties.getProperty(Constants.driver));</code></p><p><img src="https://cdn.jsdelivr.net/gh/Nanzet/nanzet-imgs/images/2020061003.png" alt=""></p><p> mvn方式运行服务：</p><p><code>mvn spring-boot:run</code></p><p><img src="https://cdn.jsdelivr.net/gh/Nanzet/nanzet-imgs/images/2020061004.jpg" alt=""></p><p> Snowflake和Segment两种获取唯一ID的模式的访问方式如下：</p><pre><code># Segment模式获取唯一IDhttp://localhost:8080/api/segment/get/payhttp://localhost:8080/api/segment/get/account# Snowflake模式获取唯一IDhttp://localhost:8080/api/snowflake/get/payhttp://localhost:8080/api/snowflake/get/account</code></pre><p><img src="https://cdn.jsdelivr.net/gh/Nanzet/nanzet-imgs/images/2020061005.jpg" alt=""></p><p> Segment模式监控页面：</p><p><code>http://localhost:8080/cache</code></p><p><img src="https://cdn.jsdelivr.net/gh/Nanzet/nanzet-imgs/images/2020061006.jpg" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 分布式唯一ID </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>A gift</title>
      <link href="/396a.html"/>
      <url>/396a.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@2.0.1/dist/Meting.min.js"></script><div id="aplayer-WrMxVWkI" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="536624791" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="true" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"></div><h5 id="我小弟的心意"><a href="#我小弟的心意" class="headerlink" title="我小弟的心意"></a>我小弟的心意</h5><p><img src="https://cdn.jsdelivr.net/gh/nanzet/nanzet-imgs/images/qianm.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/nanzet/nanzet-imgs/images/giftcard.jpg" alt=""><br>一起加油吧!大哥在南京等你 <span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f618.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f618.png?v8">😘</span></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 心情 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>下雪啦</title>
      <link href="/fe66.html"/>
      <url>/fe66.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@2.0.1/dist/Meting.min.js"></script><h5 id="小思绪-grin"><a href="#小思绪-grin" class="headerlink" title="小思绪:grin:"></a>小思绪<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f601.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f601.png?v8">😁</span></h5><p> 回南京的第一场雪，现在外面正在下冰雹，有点小开心ヾ(✿ﾟ▽ﾟ)ノ~羡慕的合肥的鹅毛大雪哇。为自己的机智感到庆幸jiojio不冷了，顺丰真快！今年都没有堆雪人，最喜欢玩打雪仗了，小时候和几个小跟班搭的秘密基地被拆了。看netfix的《怪奇物语》的时候也想起了很多小时候的事情，eleven真的帅啊！</p><h5 id="去年的雪-snowflake"><a href="#去年的雪-snowflake" class="headerlink" title="去年的雪:snowflake:"></a>去年的雪<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/2744.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/2744.png?v8">❄</span></h5><p>小鱼鱼<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f41f.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f41f.png?v8">🐟</span><br><img src="https://cdn.jsdelivr.net/gh/nanzet/nanzet-imgs/images/snow_fish.jpg" alt=""></p><p>瓜子脸的雪人<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/26c4.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/26c4.png?v8">⛄</span><br><img src="https://cdn.jsdelivr.net/gh/nanzet/nanzet-imgs/images/%E9%9B%AA%E4%BA%BA.jpg" alt=""></p><h5 id="ps"><a href="#ps" class="headerlink" title="ps"></a>ps</h5><p> 文章背景图是life is strange游戏里的Max，赚了我好多眼泪的游戏。分享几张截图：<br><strong>暴风雨来临</strong><span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/26a1.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/26a1.png?v8">⚡</span><br><img src="https://cdn.jsdelivr.net/gh/nanzet/nanzet-imgs/images/%E5%A5%87%E5%BC%82%E4%BA%BA%E7%94%9Ftogether.png" alt=""></p><p><strong>两个小侦探</strong><span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f383.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f383.png?v8">🎃</span><br><img src="https://cdn.jsdelivr.net/gh/nanzet/nanzet-imgs/images/%E4%B8%A4%E4%B8%AA%E5%B0%8F%E4%BE%A6%E6%8E%A2.png" alt=""></p><p><strong>克洛伊的涂鸦</strong><span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/270f.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/270f.png?v8">✏</span><br><img src="https://cdn.jsdelivr.net/gh/nanzet/nanzet-imgs/images/%E5%85%8B%E6%B4%9B%E4%BC%8A%E7%9A%84%E6%B6%82%E9%B8%A6.png" alt=""></p><p><strong>麦克斯的画展</strong><span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f3c6.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3c6.png?v8">🏆</span><br><img src="https://cdn.jsdelivr.net/gh/nanzet/nanzet-imgs/images/max%E7%9A%84%E7%94%BB%E5%B1%95.png" alt=""></p><p><strong>手绘</strong><span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f4dd.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4dd.png?v8">📝</span><br><img src="https://cdn.jsdelivr.net/gh/nanzet/nanzet-imgs/images/%E6%89%8B%E7%BB%98.png" alt=""></p><p><strong>小镇被摧毁，可选结局-时光倒流-拯救克洛伊-离开</strong><span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f491.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f491.png?v8">💑</span><br><img src="https://cdn.jsdelivr.net/gh/nanzet/nanzet-imgs/images/%E9%80%83%E7%A6%BB.png" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 心情 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git学习小记</title>
      <link href="/fdbe.html"/>
      <url>/fdbe.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@2.0.1/dist/Meting.min.js"></script><p>1、初始化一个Git仓库，使用<strong>git init</strong>命令。可以将某个新建的目录变成Git可以管理的仓库。</p><p>2、提交修改和提交新文件到Git仓库，一样分两步：</p><ul><li>使用命令<strong>git add <file></file></strong> ，注意，可反复多次使用，添加多个文件；</li><li>使用命令<strong>git commit -m “说明注释”</strong> ，完成。</li></ul><p>3、<strong>git status</strong>可查看工作区状态，<strong>git diff</strong>可查看版本修改内容。</p><p>4、<strong>git add</strong>的各种区别：</p><pre><code>git add -A   // 添加所有改动git add *     // 添加新建文件和修改，但是不包括删除git add .    // 添加新建文件和修改，但是不包括删除git add -u   // 添加修改和删除，但是不包括新建文件</code></pre><p><strong>git add . 和 git add * 区别：</strong><br> git add . 会把本地所有untrack的文件都加入暂存区，并且会根据.gitignore做过滤，但是git add * 会忽略.gitignore把任何文件都加入。</p><p>5、在 commit 前撤销 add:</p><pre><code>git reset &lt;file&gt; // 撤销提交单独文件git reset        // unstage all due changes</code></pre><p>6、版本回退：</p><ul><li>HEAD指向的版本就是当前版本，因此，Git允许我们在版本的历史之间穿梭，使用命令git reset –hard commit_id。</li><li>穿梭前，用git log可以查看提交历史，以便确定要回退到哪个版本。</li><li>要重返未来，用git reflog查看命令历史，以便确定要回到未来的哪个版本。</li></ul><p>7、理解： 需要提交的文件修改通通放到暂存区，然后，一次性提交暂存区的所有修改。<br><img src="https://cdn.jsdelivr.net/gh/nanzet/nanzet-imgs/images/git.jpg" alt=""></p><p>8、git管理的是修改而不是文件：每次修改，如果不用git add到暂存区，那就不会加入到commit中。</p><p>9、撤销修改：<br><strong>场景1：</strong><br> 改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令git checkout – file。</p><p><strong>场景2：</strong><br> 不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令git reset HEAD <file>，就回到了场景1，第二步按场景1操作。</file></p><p><strong>场景3：</strong><br> 已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退，不过前提是没有推送到远程库。</p><p>10、删除文件流程：</p><ul><li><p>在本地仓库删除指定文件：<br><code>git rm &lt;filename&gt;</code></p></li><li><p>删除本地仓库文件夹：（先进入该文件夹所在目录在执行命令）<br><code>git rm -r 文件夹/</code></p></li><li><p>提交修改<br><code>git commit -m "删除文件夹"</code></p></li><li><p>推送到远程仓库<br><code>git push    # origin master</code></p></li></ul><p><strong>注：git rm命令</strong></p><pre><code>git rm -h用法：git rm [&lt;选项&gt;] [--] &lt;文件&gt;...    -n, --dry-run         演习    -q, --quiet           不列出删除的文件    --cached              只从索引区删除    -f, --force           忽略文件更新状态检查    -r                    允许递归删除    --ignore-unmatch      即使没有匹配，也以零状态退出</code></pre><p>11、从远程库克隆：<br> 例如已经在gitea创建了名为PE-TOOL的仓库并勾选了Initialize this repository with a README。<br> 使用git clone克隆一个本地库：<br><code>git clone http://xxxx/Nanzet/PE-TOOL.git</code></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>了解国内相关法规，爬虫到底能爬哪些内容？</title>
      <link href="/dea1.html"/>
      <url>/dea1.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@2.0.1/dist/Meting.min.js"></script><h3 id="1-爬虫相关违法违规案例"><a href="#1-爬虫相关违法违规案例" class="headerlink" title="1. 爬虫相关违法违规案例"></a>1. 爬虫相关违法违规案例</h3><hr><h4 id="1-1-为违法违规组织提供爬虫相关服务"><a href="#1-1-为违法违规组织提供爬虫相关服务" class="headerlink" title="1.1 为违法违规组织提供爬虫相关服务"></a>1.1 为违法违规组织提供爬虫相关服务</h4><ul><li><p><a href="https://github.com/HiddenStrawberry/Crawler_Illegal_Cases_In_China/tree/master/case2" target="_blank" rel="noopener">“快啊答题”AI破解验证码服务被抓</a></p></li><li><p><a href="https://baijiahao.baidu.com/s?id=1589886315683543136&amp;wfr=spider&amp;for=pc" target="_blank" rel="noopener">永嘉警方揪出“黑”百度黑客团伙 干扰搜索引擎牟利超七千万元</a></p></li></ul><h4 id="1-2-抓取个人隐私数据并贩卖"><a href="#1-2-抓取个人隐私数据并贩卖" class="headerlink" title="1.2 抓取个人隐私数据并贩卖"></a>1.2 抓取个人隐私数据并贩卖</h4><ul><li><p><a href="https://github.com/HiddenStrawberry/Crawler_Illegal_Cases_In_China/tree/master/case3" target="_blank" rel="noopener">简历大数据公司“巧达科技”被一锅端</a></p></li><li><p><a href="http://www.aihami.com/a/dangjian/shibada/403060.html" target="_blank" rel="noopener">社保掌上通被下架 用户的信息很容易泄露太不安全了</a></p></li><li><p><a href="http://baijiahao.baidu.com/s?id=1645632518831659246&amp;wfr=spider&amp;for=pc" target="_blank" rel="noopener">爬虫为何受关注？业内：大数据服务商或因合作方涉套路贷犯罪而被牵连</a></p></li></ul><h4 id="1-3-利用无版权的商业数据获利"><a href="#1-3-利用无版权的商业数据获利" class="headerlink" title="1.3 利用无版权的商业数据获利"></a>1.3 利用无版权的商业数据获利</h4><ul><li><p><a href="https://github.com/HiddenStrawberry/Crawler_Illegal_Cases_In_China/tree/master/case6" target="_blank" rel="noopener">“车来了”涉嫌偷数据被警方立案</a></p></li><li><p><a href="https://money.163.com/19/0802/06/ELI9OADD002580S6.html" target="_blank" rel="noopener">裁判文书网数据竟被售卖：爬虫程序抓取 或成侵权</a></p></li></ul><h4 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h4><ul><li><a href="https://github.com/HiddenStrawberry/Crawler_Illegal_Cases_In_China/tree/master/case7" target="_blank" rel="noopener">头疼大战前传：头条前高管反噬被判刑</a></li></ul><h3 id="2-相关法律法规"><a href="#2-相关法律法规" class="headerlink" title="2. 相关法律法规"></a>2. 相关法律法规</h3><hr><h4 id="2-1-《中华人民共和国刑法》对网络爬虫的定罪依据"><a href="#2-1-《中华人民共和国刑法》对网络爬虫的定罪依据" class="headerlink" title="2.1 《中华人民共和国刑法》对网络爬虫的定罪依据"></a>2.1 《中华人民共和国刑法》对网络爬虫的定罪依据</h4><ul><li>第二百八十五条 非法侵入计算机信息系统罪</li></ul><blockquote><p> 违反国家规定，侵入国家事务、国防建设、尖端科学技术领域的计算机信息系统的，处三年以下有期徒刑或者拘役。<br> 违反国家规定，侵入前款规定以外的计算机信息系统或者采用其他技术手段，获取该计算机信息系统中存储、处理或者传输的数据，或者对该计算机信息系统实施非法控制，情节严重的，处三年以下有期徒刑或者拘役，并处或者单处罚金；情节特别严重的，处三年以上七年以下有期徒刑，并处罚金。<br> 提供专门用于侵入、非法控制计算机信息系统的程序、工具，或者明知他人实施侵入、非法控制计算机信息系统的违法犯罪行为而为其提供程序、工具，情节严重的，依照前款的规定处罚。<br> 单位犯前三款罪的，对单位判处罚金，并对其直接负责的主管人员和其他直接责任人员，依照各该款的规定处罚。</p></blockquote><p><strong>注：《刑法》第285条是对爬虫爬取数据的主要定罪依据。</strong></p><ul><li>第二百八十六条 破坏计算机信息系统罪</li></ul><blockquote><p> 违反国家规定，对计算机信息系统功能进行删除、修改、增加、干扰，造成计算机信息系统不能正常运行，后果严重的，处五年以下有期徒刑或者拘役；后果特别严重的，处五年以上有期徒刑。<br> 违反国家规定，对计算机信息系统中存储、处理或者传输的数据和应用程序进行删除、修改、增加的操作，后果严重的，依照前款的规定处罚。<br> 故意制作、传播计算机病毒等破坏性程序，影响计算机系统正常运行，后果严重的，依照第一款的规定处罚。<br> 单位犯前三款罪的，对单位判处罚金，并对其直接负责的主管人员和其他直接责任人员，依照第一款的规定处罚。</p></blockquote><ul><li>第二百五十三条之一  侵犯公民个人信息罪</li></ul><blockquote><p> 违反国家有关规定，向他人出售或者提供公民个人信息，情节严重的，处三年以下有期徒刑或者拘役，并处或者单处罚金；情节特别严重的，处三年以上七年以下有期徒刑，并处罚金。<br>  违反国家有关规定，将在履行职责或者提供服务过程中获得的公民个人信息，出售或者提供给他人的，依照前款的规定从重处罚。<br> 窃取或者以其他方法非法获取公民个人信息的，依照第一款的规定处罚。<br>  单位犯前三款罪的，对单位判处罚金，并对其直接负责的主管人员和其他直接责任人员，依照各该款的规定处罚。</p></blockquote><h4 id="2-2-其他相关法规"><a href="#2-2-其他相关法规" class="headerlink" title="2.2 其他相关法规"></a>2.2 其他相关法规</h4><p> （1）《反不正当竞争法》<br> 第二条 经营者在生产经营活动中，应当遵循自愿、平等、公平、诚信的原则，遵守法律和商业道德。<br>（2）《著作权法》<br> 第十条主要内容：著作权人享有的著作权包括信息网络传播权，即以有线或者无线方式向公众提供作品，使公众可以在其个人选定的时间和地点获得作品的权利。<br>（3）《著作权法实施条例》<br> 第二条著作权法所称作品，是指文学、艺术和科学领域内具有独创性并能以某种有形形式复制的智力成果。<br>（4）《信息网络传播权保护条例》<br> 第二条主要内容：任何组织或者个人将他人的作品、表演、录音录像制品通过信息网络向公众提供，应当取得权利人许可，并支付报酬。<br> 第二十三条 网络服务提供者为服务对象提供搜索或者链接服务，在接到权利人的通知书后，根据本条例规定断开与侵权的作品、表演、录音录像制品的链接的，不承担赔偿责任；但是，明知或者应知所链接的作品、表演、录音录像制品侵权的，应当承担共同侵权责任。（“避风港”原则）<br>（5）《民法典人格权编》第816条<br> 行为人收集、处理自然人自行公开的或者其他已经合法公开的信息不承担民事责任，但是该自然人明确拒绝或者处理该信息侵害其重大利益的除外。</p><h3 id="3-爬取过程中的禁忌"><a href="#3-爬取过程中的禁忌" class="headerlink" title="3. 爬取过程中的禁忌"></a>3. 爬取过程中的禁忌</h3><hr><ul><li><p>爬取的数据不要直接商用</p></li><li><p>考量抓取的数据信息的属性，避免抓取公民个人信息数据</p></li><li><p>考量对抓取数据的加工、使用方式，应尽量避免对收集的各种数据进行加工整合后形成公民个人信息数据</p></li><li><p>破解/反编译对方客户端、软件，破解加密算法属于破坏计算机信息系统罪。</p></li></ul><p><strong>注：</strong><br> 通过技术手段，修改UA、修改device id、绕开网站访问频率控制等，进行数据抓取，如果被定罪，这些技术手段都是违法行为的佐证。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><hr><p> 在爬取之前应先对目标数据信息进行识别，避免爬取已合法公开或未公开的公民个人信息。尊重他人的劳动成果，不要在未经授权的情况下将爬取到的视频、图片、文本等用于其他商业目的，非法获利。针对有反爬措施机制的网站，即使数据是合法公开的非公民信息类数据，也要先确认该网站的robots协议，在不对爬取目标网站服务器造成恶意压力的情况下，进行合法爬取。进行爬取测试的时候，要严格限制爬虫爬取速度、并发数量及下载延迟等。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/3eeb.html"/>
      <url>/3eeb.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@2.0.1/dist/Meting.min.js"></script><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
